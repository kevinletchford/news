{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var server = \"https://news.ultr.dev\";\n\nvar tryParseJSON = function tryParseJSON(jsonString) {\n  try {\n    var o = JSON.parse(jsonString);\n\n    if (o && typeof o === \"object\") {\n      return o;\n    }\n  } catch (e) {}\n\n  return null;\n};\n\nexport var getData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoint) {\n    var res, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(endpoint);\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res;\n\n          case 5:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 8:\n            return _context.abrupt(\"return\", result.json());\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nif (true) {\n  self.addEventListener(\"fetch\", function (event) {\n    event.respondWith(fetch(event.request)[\"catch\"](function () {\n      return caches.match(event.request);\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}